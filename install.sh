#!/bin/bash
set -e

DB_USER="bench_user"
DB_NAME="material_bench"
DB_PASS=$(openssl rand -base64 32 | tr -dc 'a-zA-Z0-9' | head -c 32)

APP_NAME="material_bench_api"
APP_DIR="/opt/$APP_NAME"
PYTHON_BIN="python3"
PIP_BIN="pip"

if [ "$EUID" -ne 0 ]; then
  echo "‚ùå –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –Ω—É–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –æ—Ç –∏–º–µ–Ω–∏ root (sudo)."
  echo "   –ü—Ä–∏–º–µ—Ä: sudo $0"
  exit 1
fi

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω—ã–π bootstrap –¥–ª—è $APP_NAME..."

echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
apt update -qq
apt install -y "$PYTHON_BIN"-venv "$PYTHON_BIN"-pip postgresql postgresql-client build-essential gunicorn || { echo "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–æ–≤."; exit 1; }

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–ø—É—â–µ–Ω –ª–∏ PostgreSQL..."
systemctl start postgresql 2>/dev/null || true
systemctl enable postgresql

echo "üß© –ü—Ä–æ–≤–µ—Ä–∫–∞/—Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '$DB_USER'..."
if sudo -u postgres psql -tAc "SELECT 1 FROM pg_roles WHERE rolname='$DB_USER'" | grep -q 1; then
    echo "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '$DB_USER' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."
    echo "üîë –û–±–Ω–æ–≤–ª—è—é –ø–∞—Ä–æ–ª—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '$DB_USER'..."
    sudo -u postgres psql -c "ALTER USER $DB_USER WITH PASSWORD '$DB_PASS';"
else
    echo "üë§ –°–æ–∑–¥–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '$DB_USER' —Å –Ω–æ–≤—ã–º —Å–ª—É—á–∞–π–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º..."
    sudo -u postgres psql -c "CREATE USER $DB_USER WITH PASSWORD '$DB_PASS';"
fi

echo "üß± –ü—Ä–æ–≤–µ—Ä–∫–∞/—Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö '$DB_NAME'..."
if sudo -u postgres psql -tAc "SELECT 1 FROM pg_database WHERE datname='$DB_NAME'" | grep -q 1; then
    echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö '$DB_NAME' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."
else
    echo "üì¶ –°–æ–∑–¥–∞—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö '$DB_NAME' –≤–ª–∞–¥–µ–ª—å—Ü–µ–º '$DB_USER'..."
    sudo -u postgres createdb -O "$DB_USER" "$DB_NAME"
fi

echo "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ä–µ–¥—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."

mkdir -p "$APP_DIR"
"$PYTHON_BIN" -m venv "$APP_DIR/venv"
source "$APP_DIR/venv/bin/activate"

echo "fastapi" > /tmp/requirements.txt
echo "uvicorn" >> /tmp/requirements.txt
echo "asyncpg" >> /tmp/requirements.txt
"$PIP_BIN" install -r /tmp/requirements.txt
rm /tmp/requirements.txt
deactivate

echo "üìÑ –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞ –∏ .env —Ñ–∞–π–ª–∞ —Å –ø–∞—Ä–æ–ª–µ–º..."

cat << EOF > "$APP_DIR/.env"
DB_USER=$DB_USER
DB_PASS=$DB_PASS
DB_NAME=$DB_NAME
DB_HOST=localhost
EOF
chmod 600 "$APP_DIR/.env"

cat << EOF > /etc/systemd/system/$APP_NAME.service
[Unit]
Description=$APP_NAME FastAPI Service
After=network.target postgresql.service

[Service]
User=www-data
Group=www-data
WorkingDirectory=$APP_DIR
EnvironmentFile=$APP_DIR/.env
ExecStart=$APP_DIR/venv/bin/gunicorn __main__:app --bind 0.0.0.0:8010
Restart=always
ExecStartPre=/usr/bin/git -C $APP_DIR reset --hard
ExecStartPre=/usr/bin/git -C $APP_DIR pull

[Install]
WantedBy=multi-user.target
EOF

echo "‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ –∏ –≤–∫–ª—é—á–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ $APP_NAME..."
systemctl daemon-reload
systemctl enable "$APP_NAME.service"
systemctl start "$APP_NAME.service"
systemctl status "$APP_NAME.service" --no-pager || true

echo
echo "‚úÖ –í–°–Å –ì–û–¢–û–í–û!"
echo "   –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ systemd —Å–µ—Ä–≤–∏—Å –Ω–∞ –ø–æ—Ä—Ç—É 8010."
echo "   –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å –ë–î: $DB_PASS"
echo "   –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ $APP_DIR/.env"
echo
echo "üö® –°–õ–ï–î–£–Æ–©–ò–ô –®–ê–ì: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx (–≤—Ä—É—á–Ω—É—é):"
echo "   1. –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–∫—Å–∏-–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Nginx –¥–ª—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å 80/443 –Ω–∞ localhost:8010."
echo "   2. –û–±–µ—Å–ø–µ—á—å—Ç–µ TLS-—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ (Let's Encrypt)."