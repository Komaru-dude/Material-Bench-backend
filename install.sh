#!/bin/bash
set -e

APP_DIR="material-bench-backend"
SERVICE_NAME="material-bench-backend"
SERVICE_FILE="/etc/systemd/system/${SERVICE_NAME}.service"
GIT_REPO="https://github.com/Komaru-dude/Material-Bench-backend"
APP_USER="materialbench"

if [ "$EUID" -ne 0 ]; then
    echo "‚ö†Ô∏è  –°–∫—Ä–∏–ø—Ç —Ç—Ä–µ–±—É–µ—Ç root-–¥–æ—Å—Ç—É–ø. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å sudo:"
    echo "sudo $0"
    exit 1
fi

echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ${SERVICE_NAME}"

if id "${APP_USER}" &>/dev/null; then
    echo "üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${APP_USER} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."
else
    echo "üë§ –°–æ–∑–¥–∞—é —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${APP_USER}..."
    useradd -r -m -d /opt/${APP_DIR} -s /usr/sbin/nologin ${APP_USER}
    echo "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${APP_USER} —Å–æ–∑–¥–∞–Ω."
fi

apt update -y
apt install -y python3 python3-venv git openssl

cd /opt

if [ -d "${APP_DIR}" ]; then
    echo "‚ôªÔ∏è  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è ${APP_DIR} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è—é..."
    rm -rf "${APP_DIR}"
fi

echo "‚¨áÔ∏è  –ö–ª–æ–Ω–∏—Ä—É—é —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π ${GIT_REPO}..."
git clone "${GIT_REPO}" "${APP_DIR}"
cd "${APP_DIR}"
chown -R ${APP_USER}:${APP_USER} .

echo "üêç –°–æ–∑–¥–∞—é –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ..."
sudo -u ${APP_USER} python3 -m venv venv

echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
sudo -u ${APP_USER} bash -c "source venv/bin/activate && \
    if [ -f requirements.txt ]; then pip install -r requirements.txt; \
    else pip install 'fastapi[all]' uvicorn asyncpg python-dotenv; fi"

DB_PASS=$(openssl rand -base64 12)
cat <<EOF > .env.example
DB_USER=app_user
DB_PASS=${DB_PASS}
DB_NAME=mb_db
DB_HOST=localhost
EOF
chown ${APP_USER}:${APP_USER} .env.example
echo "‚úÖ –§–∞–π–ª .env.example —Å–æ–∑–¥–∞–Ω."

FULL_APP_PATH="/opt/${APP_DIR}"
FULL_VENV_PATH="${FULL_APP_PATH}/venv/bin"

cat <<EOF > "start_server.sh"
#!/bin/bash
cd "${FULL_APP_PATH}"
git fetch origin main
git reset --hard origin/main
source venv/bin/activate
exec "${FULL_VENV_PATH}/uvicorn" app.__main__:app --host 0.0.0.0 --port 8000 --workers 2
EOF

chmod +x "start_server.sh"
chown ${APP_USER}:${APP_USER} start_server.sh
echo "‚úÖ –°–∫—Ä–∏–ø—Ç start_server.sh —Å–æ–∑–¥–∞–Ω."

cat <<EOF > "${SERVICE_FILE}"
[Unit]
Description=${SERVICE_NAME} FastAPI Application
After=network.target postgresql.service

[Service]
User=${APP_USER}
Group=${APP_USER}
WorkingDirectory=${FULL_APP_PATH}
ExecStart=/bin/bash ${FULL_APP_PATH}/start_server.sh
Restart=always
RestartSec=5

[Install]
WantedBy=multi-user.target
EOF

echo "‚úÖ Unit-—Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: ${SERVICE_FILE}"

systemctl daemon-reload
systemctl enable ${SERVICE_NAME}.service

echo ""
echo "-------------------------------------------"
echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "-------------------------------------------"
echo ""
echo "üìÑ –î–∞–ª—å–Ω–µ–π—à–∏–µ —à–∞–≥–∏:"
echo "1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ '.env.example' –≤ '.env' –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –ë–î:"
echo "   sudo -u ${APP_USER} cp /opt/${APP_DIR}/.env.example /opt/${APP_DIR}/.env"
echo "   sudo -u ${APP_USER} nano /opt/${APP_DIR}/.env"
echo ""
echo "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å:"
echo "   sudo systemctl start ${SERVICE_NAME}.service"
echo ""
echo "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å:"
echo "   sudo systemctl status ${SERVICE_NAME}.service"
echo ""
echo "4. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É:"
echo "   http://<–≤–∞—à_IP>:8000"
